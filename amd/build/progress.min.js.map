{"version":3,"file":"progress.min.js","sources":["../src/progress.js"],"sourcesContent":["/**\n * AMD-модуль для отображения прогресса чтения лонгрида и автоматической прокрутки.\n *\n * @module     mod_longread/progress\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([], function () {\n  let totalParts, currentPart;\n  let progressBar;\n\n  /**\n   * Инициализирует прогресс-бар и восстанавливает прокрутку.\n   *\n   * @param {number} partcount Общее число частей.\n   * @param {number} startPart Номер начальной части.\n   * @return {void}\n   */\n  function init(partcount, startPart) {\n    totalParts = partcount;\n    currentPart = startPart || 1;\n    progressBar = document.getElementById(\"longread-progress-bar\");\n    updateProgress();\n  }\n\n  /**\n   * Устанавливает текущую часть и обновляет прогресс.\n   *\n   * @param {number} part Номер текущей части.\n   * @return {void}\n   */\n  function setPart(part) {\n    currentPart = part;\n    updateProgress();\n  }\n\n  /**\n   * Обновляет ширину прогресс-бара.\n   *\n   * @return {void}\n   */\n  function updateProgress() {\n    if (progressBar) {\n      const percent = (currentPart / totalParts) * 100;\n      progressBar.style.width = percent + \"%\";\n    }\n  }\n\n  return {\n    init: init,\n    setPart: setPart,\n  };\n});\n"],"names":["define","totalParts","currentPart","progressBar","updateProgress","percent","style","width","init","partcount","startPart","document","getElementById","setPart","part"],"mappings":";;;;;;AAOAA,+BAAO,IAAI,eACLC,WAAYC,YACZC,qBAgCKC,oBACHD,YAAa,OACTE,QAAWH,YAAcD,WAAc,IAC7CE,YAAYG,MAAMC,MAAQF,QAAU,WAIjC,CACLG,cA/BYC,UAAWC,WACvBT,WAAaQ,UACbP,YAAcQ,WAAa,EAC3BP,YAAcQ,SAASC,eAAe,yBACtCR,kBA4BAS,iBAnBeC,MACfZ,YAAcY,KACdV"}