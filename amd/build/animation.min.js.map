{"version":3,"file":"animation.min.js","sources":["../src/animation.js"],"sourcesContent":["/**\n * AMD-модуль для анимации плавного появления частей лонгрида.\n *\n * @module     mod_longread/animation\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([], function () {\n  /**\n   * Инициализирует обработчик для плавного появления частей.\n   *\n   * @return {void}\n   */\n  function init() {\n    const observerOptions = {\n      root: null,\n      rootMargin: \"0px 0px -50px 0px\",\n      threshold: 0.1,\n    };\n\n    const observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          entry.target.classList.add(\"visible\");\n          observer.unobserve(entry.target);\n        }\n      });\n    }, observerOptions);\n\n    document.addEventListener(\"longread:partadded\", function (event) {\n      if (event.detail && event.detail.el) {\n        observer.observe(event.detail.el);\n      }\n    });\n  }\n\n  return { init: init };\n});\n"],"names":["define","init","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","unobserve","root","rootMargin","threshold","document","addEventListener","event","detail","el","observe"],"mappings":";;;;;;AAOAA,gCAAO,IAAI,iBA6BF,CAAEC,sBAhBDC,SAAW,IAAIC,sBAAqB,SAAUC,SAClDA,QAAQC,SAAQ,SAAUC,OACpBA,MAAMC,iBACRD,MAAME,OAAOC,UAAUC,IAAI,WAC3BR,SAASS,UAAUL,MAAME,cAVP,CACtBI,KAAM,KACNC,WAAY,oBACZC,UAAW,KAYbC,SAASC,iBAAiB,sBAAsB,SAAUC,OACpDA,MAAMC,QAAUD,MAAMC,OAAOC,IAC/BjB,SAASkB,QAAQH,MAAMC,OAAOC"}